#pragma once
#include <efitypes.h>
#include <efiMem.h>

typedef struct{
    UINT16 Year;
    UINT8 Month;
    UINT8 Day;
    UINT8 Hour;
    UINT8 Minute;
    UINT8 Second;
    UINT8 Pad1;
    UINT32 Nanosecond;
    INT16 TimeZone;
    UINT8 Daylight;
    UINT8 Pad2;
}EFI_TIME;

typedef struct{
    UINT32 Resolution;
    UINT32 Accuracy;
    BOOLEAN SetsToZero;
}EFI_TIME_CAPABILITIES;

typedef enum{
    EfiResetCold,
    EfiResetWarm,
    EfiResetShutdown,
    EfiResetPlatformSpecific
}EFI_RESET_TYPE;

typedef struct{
    EFI_GUID CapsuleGuid;
    UINT32 HeaderSize;
    UINT32 Flags;
    UINT32 CapsuleImageSize;
}EFI_CAPSULE_HEADER;

typedef EFI_STATUS (EFIAPI *EFI_GET_VARIABLE) (CHAR16*,EFI_GUID*,UINT32*,UINTN*,VOID*);
typedef EFI_STATUS (EFIAPI *EFI_GET_NEXT_VARIABLE_NAME) (UINTN*,CHAR16*,EFI_GUID*);
typedef EFI_STATUS (EFIAPI *EFI_SET_VARIABLE) (CHAR16*,EFI_GUID*,UINT32,UINTN,VOID*);
typedef EFI_STATUS (EFIAPI *EFI_QUERY_VARIABLE_INFO) (UINT32,UINT64*,UINT64*,UINT64*);
typedef EFI_STATUS (EFIAPI *EFI_GET_TIME) (EFI_TIME*,EFI_TIME_CAPABILITIES*);
typedef EFI_STATUS (EFIAPI *EFI_SET_TIME) (EFI_TIME*);
typedef EFI_STATUS (EFIAPI *EFI_GET_WAKEUP_TIME) (BOOLEAN*,BOOLEAN*,EFI_TIME*);
typedef EFI_STATUS (EFIAPI *EFI_SET_WAKEUP_TIME) (BOOLEAN,EFI_TIME*);
typedef EFI_STATUS (EFIAPI *EFI_SET_VIRTUAL_ADDRESS_MAP) (UINTN,UINTN,UINT32,EFI_MEMORY_DESCRIPTOR*);
typedef EFI_STATUS (EFIAPI *EFI_CONVERT_POINTER) (UINTN,VOID**);
typedef EFI_STATUS (EFIAPI *EFI_RESET_SYSTEM) (EFI_RESET_TYPE,EFI_STATUS,UINTN,VOID*);
typedef EFI_STATUS (EFIAPI *EFI_GET_NEXT_HIGH_MONO_COUNT) (UINT32*);
typedef EFI_STATUS (EFIAPI *EFI_UPDATE_CAPSULE) (EFI_CAPSULE_HEADER*,UINTN,EFI_PHYSICAL_ADDRESS);
typedef EFI_STATUS (EFIAPI *EFI_QUERY_CAPSULE_CAPABILITIES) (EFI_CAPSULE_HEADER**,UINTN,UINT64*,EFI_RESET_TYPE*);

typedef struct{
    EFI_TABLE_HEADER Hdr;
    EFI_GET_TIME GetTime;
    EFI_SET_TIME SetTime;
    EFI_GET_WAKEUP_TIME GetWakeupTime;
    EFI_SET_WAKEUP_TIME SetWakeupTime;
    EFI_SET_VIRTUAL_ADDRESS_MAP SetVirtualAddressMap;
    EFI_CONVERT_POINTER ConvertPointer;
    EFI_GET_VARIABLE GetVariable;
    EFI_GET_NEXT_VARIABLE_NAME GetNextVariableName;
    EFI_SET_VARIABLE SetVariable;
    EFI_GET_NEXT_HIGH_MONO_COUNT GetNextHighMonotonicCount;
    EFI_RESET_SYSTEM ResetSystem;
    EFI_UPDATE_CAPSULE UpdateCapsule;
    EFI_QUERY_CAPSULE_CAPABILITIES QueryCapsuleCapabilities;
    EFI_QUERY_VARIABLE_INFO QueryVariableInfo;
}EFI_RUNTIME_SERVICES;